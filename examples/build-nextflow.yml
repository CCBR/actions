name: build

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      test_run:
        type: boolean
        default: false
        required: true

env:
  test_run: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.test_run }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install nextflow
        uses: nf-core/setup-nextflow@v1
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install click pyyaml cffconvert
      - name: check out-of-the-box CLI script
        run: |
          bash bin/champagne --help
          cd tests/cli && ../../bin/champagne --help
      - name: Install champagne python package
        run: |
          pip install .[dev,test]
          python -c 'from champagne.src.util import chmod_bins_exec; chmod_bins_exec()'
      - name: Check CLI basics
        run: |
          which champagne
          champagne --version
          champagne --citation
      - name: Stub run
        run: |
          cd tests/cli
          champagne init
          champagne run -stub -c ci_stub.config --max_cpus 2 --max_memory 6.GB
      - name: Test run
        if: ${{ env.test_run == 'true' }}
        run: |
          cd tests/cli
          champagne init
          champagne run -profile docker -c ci_test.config
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v3
        if: always() # run even if previous steps fail
        with:
          name: nextflow-log
          path: .nextflow.log
  build-status: # https://github.com/orgs/community/discussions/4324#discussioncomment-3477871
    runs-on: ubuntu-latest
    needs: [build]
    if: always()
    steps:
      - name: Successful build
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failing build
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
