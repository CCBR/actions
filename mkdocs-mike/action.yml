name: "mkdocs-mike"
description: "Deploy documentation to github pages using mkdocs + mike"
author: "Kelly Sovacool"
inputs:
  github-token:
    description: "GitHub Actions token (e.g. { github.token })"
    required: true
  ccbr-actions-version:
    description: "The version of ccbr_actions to install"
    required: true
    default: "main"
  python-version:
    description: "The version of Python to install"
    required: true
    default: "3.11"
  docs-branch:
    description: "The branch to deploy the docs website to"
    required: true
    default: "gh-pages"
  github-actor:
    description: "Username of GitHub actor for the git commit when the docs branch is deployed"
    required: true
    default: "41898282+github-actions[bot]"
  strict-semver:
    description: "Whether to follow strict semantic versioning guidelines"
    type: boolean
    default: true
outputs:
  version:
    description: "The version of the docs being deployed."
    value: ${{ steps.set-version.outputs.version }}
  alias:
    description: "The alias of the version being deployed."
    value: ${{ steps.set-version.outputs.alias }}
runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: pip
    - name: git config
      shell: bash
      run: |
        git config --local user.email "${{ inputs.github-actor }}@users.noreply.github.com"
        git config --local user.name "${{ inputs.github-actor }}"
    - name: pip install
      shell: bash
      run: |
        pip install --upgrade pip git+https://github.com/CCBR/actions.git@${{ inputs.ccbr-actions-version }}
        if [ -f docs/requirements.txt ]; then pip install -r docs/requirements.txt; fi
    - name: set version tag & alias for mike
      id: set-version
      shell: python {0}
      run: |
        from ccbr_actions.docs import set_docs_version
        release_tag="${{ github.event.release.tag_name }}" if "${{ github.event_name }}" == "release" else None
        strict_semver = "${{ inputs.strict-semver }}" == "true"

        # set VERSION and ALIAS env vars
        set_docs_version(repo='${{ github.repository }}', release_tag=release_tag, strict_semver = strict_semver)

      env:
        GH_TOKEN: ${{ inputs.github-token }}
    - name: deploy docs
      shell: bash
      run: |
        mike deploy ${{ steps.set-version.outputs.version }} ${{ steps.set-version.outputs.alias }} \
          --push \
          --update-aliases \
          --branch ${{ inputs.docs-branch }}
