---
format: gfm
execute:
  echo: false
  output: asis
---

# draft-release

```{python}
import ccbr_actions.docs

action = ccbr_actions.docs.parse_action_yaml('action.yml')
print(ccbr_actions.docs.action_markdown_desc(action))
```

This action helps create a draft release based on the contents of the changelog and commit history.
It is designed to be used in a manually triggered workflow to draft a release.
The latest commit in the branch you run the workflow from will be used as the target for the release tag.

## Usage

Required files:

- `CHANGELOG.md` - a changelog or news file with entries in reverse chronological order. The newest entry should contain "development header".
- `VERSION` - a single-source version file.
- `CITATION.cff` - a citation file.

### Basic example

[draft-release.yml](/examples/draft-release.yml)


```{python}
yml_file='../examples/draft-release.yml'
print('```yaml')
with open(yml_file, 'r') as infile:
  print(infile.read())
print('```\n')
```


### Customized inputs

```yaml
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required to include tags
      - uses: CCBR/actions/draft-release@main
        with:
          github-token: ${{ github.token }}
          version-tag: ${{ github.event.inputs.version-tag }}
          ccbr-actions-version: main
          python-verson: 3.11
          draft-branch: "release-draft"
          version-filepath: VERSION
          changelog-filepath: CHANGELOG.md
          citation-filepath: CITATION.cff
          dev-header: "development version"
          github-actor: "41898282+github-actions[bot]"
```

```{python}
print(ccbr_actions.docs.action_markdown_io(action))
```
